<div class="theme justify-start absolute z-10 right-14 lg:right-4 top-9 w-[42px] h-6 p-[3px] bg-white rounded-[14px] border border-black items-center gap-2.5 inline-flex">
    <div class="circle w-[18px] h-[18px] bg-nuit rounded-full shadow"></div>
  </div>
  
  <script is:inline>
      // Initialisation des éléments et état
      const toggleTheme = document.querySelector('.theme');
      const targetTheme = document.documentElement;  // Accède à <html>
      const circle = document.querySelector('.circle');  // Le bouton animé
      let isTweening = false;  // Empêche d'enchaîner les animations trop vite
  
      // Fonction pour basculer le thème avec GSAP Flip
      function switchTheme() {
        if (isTweening) return;  // Si une animation est en cours, ne rien faire
        isTweening = true;  // Bloquer les nouvelles animations jusqu'à la fin de celle-ci
        
        // Sauvegarde l'état de l'élément avant le changement de disposition
        const state = Flip.getState(circle);
        
        // Basculer le thème entre "dark" et "light"
        if (targetTheme.classList.contains('dark')) {
          targetTheme.classList.remove('dark');
          localStorage.setItem('theme', 'light');  // Sauvegarde le thème dans localStorage
          toggleTheme.classList.remove('justify-end');
          toggleTheme.classList.add('justify-start');  // Ajuste la disposition avec Tailwind
        } else {
          targetTheme.classList.add('dark');
          localStorage.setItem('theme', 'dark');  // Sauvegarde le thème dans localStorage
          toggleTheme.classList.remove('justify-start');
          toggleTheme.classList.add('justify-end');  // Ajuste la disposition avec Tailwind
        }
        
        // Animation avec GSAP Flip pour un changement fluide
        Flip.from(state, {
          duration: 0.5,
          ease: "bounce.out",
          onComplete: () => (isTweening = false)  // Libérer après l'animation
        });
      }
  
      // Appliquer le thème sauvegardé au chargement de la page
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme) {
        targetTheme.classList.add(savedTheme);  // Applique le thème sauvegardé
  
        // Ajuster la disposition de l'élément en fonction du thème
        if (savedTheme === 'dark') {
          toggleTheme.classList.add('justify-end');
        } else {
          toggleTheme.classList.add('justify-start');
        }
      } else {
        // Appliquer "dark" par défaut si aucun thème n'est sauvegardé
        targetTheme.classList.add('dark');
        toggleTheme.classList.add('justify-end');  // Place le bouton à droite
        localStorage.setItem('theme', 'dark');  // Sauvegarde "dark" par défaut
      }
  
      // Écouteur d'événements pour le clic sur le bouton de toggle
      toggleTheme.addEventListener('click', switchTheme);
  </script>
  